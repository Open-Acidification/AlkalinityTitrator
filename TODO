Pipfile:
Remove:
- keyboard
- pynput
- smbus2
- "rpi.gpio"?
- pyserial
- pep8
- pad4pi
- adafruit-blinka

Remove Class UIState: COMPLETE
 - changed the self._setNextState calls to self.titrator.updateState
 - removed (ui_state.UIState) from class prototypes
 - removed ui_state.__init__ from states (not used)
 - removed all imports of UIState
 - removed the class and its file

Updates to Titrator: COMPLETE
 - removed setNextState (Isn't used and doesn't make sense)
 - updated updateState to not need nextState
 - removed variable nextState (Useless)
 - changed _updateState to not be private
 - removed updateState call from handleUI (updateState is called directly in the states,
 no need for the state machine to constantly call this function)
 - updated names of function in state files and test files

Create user_value_test.py: COMPLETE
 - create a handleUI test
 - create a loop test
 - create a UserValue test

Refactor user_value.py:
 - seperate key.isnumeric() and key == "*"
 - remove self.inputs (Everything can be accomplished with just self.string)
 - remove key == "D" (Not listed as an option, already implemented as A)
 - change "if len(key) > 0" to "if len(self.string) > 0" (This is the correct implementation)
 - updated key == "*" so that "0." appears if no number was entered before (Better UI)
 - remove self.instructions_1 (Does not make sense to have variable for this, doesnt follow standard)
 - remove self.instructions_2 (Does not make sense to have variable for this, doesnt follow standard)
 - remove self.subState (Is not used)
 - updated user_value_test to reflect these changes
 - # TODO: Return to a variable in the titrator class???

 
 
